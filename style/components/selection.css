/* CHECKBOXES AND RADIOS */
input:is([type="checkbox"].checkbox, [type="radio"].radio) {
    display: inline-grid;
    grid-template: "center" auto / auto;
    align-items: center;
    justify-content: center;
    vertical-align: middle;

    width: 40px;
    height: 40px;
    border-radius: 50%;

    color: rgba(var(--color-on-surface), 0.54);

    appearance: none;
    border: none;
    outline: none;
    margin: 0;
    background-color: transparent;

    cursor: pointer;

    --color-overlay: var(--color-on-surface);
}

input:is([type="checkbox"].checkbox, [type="radio"].radio)::before,
input:is([type="checkbox"].checkbox, [type="radio"].radio)::after {
    grid-area: center;

    display: block;

    width: 24px;
    height: 24px;
    font-size: 24px;
    font-family: "Material Icons";
    line-height: 1;
}

input[type="checkbox"].checkbox::before {
    content: "check_box_outline_blank";
}

input[type="radio"].radio::before {
    content: "radio_button_unchecked";
}

input:is([type="checkbox"].checkbox, [type="radio"].radio)::after {
    clip-path: circle(0%);

    transition: clip-path;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
}

input[type="checkbox"].checkbox::after {
    content: "check_box";
}

input[type="checkbox"].checkbox:indeterminate::after {
    content: "indeterminate_check_box";
}

input[type="radio"].radio::after {
    content: "radio_button_checked";
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):checked::after,
input[type="checkbox"].checkbox:indeterminate::after {
    clip-path: circle(50%);
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):hover {
    --opacity-overlay: var(--opacity-hover);
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):focus {
    --opacity-overlay: var(--opacity-focus);
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):active {
    --opacity-overlay: var(--opacity-active);
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):checked,
input[type="checkbox"].checkbox:indeterminate {
    --color-overlay: var(--color-main);
    color: rgb(var(--color-main));
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):disabled {
    color: rgba(var(--color-on-surface), var(--opacity-disabled));
    box-shadow: none;

    cursor: initial;
}

input:is([type="checkbox"].checkbox, [type="radio"].radio):disabled:checked::before,
input[type="checkbox"].checkbox:disabled:indeterminate::before {
    display: none;
}

/* SWITCHES */
input[type="checkbox"].switch {
    display: inline-block;
    position: relative;
    vertical-align: middle;

    width: 32px;
    height: 14px;
    border-radius: 7px;
    margin: 13px;

    background-color: rgba(var(--color-on-surface), var(--opacity-disabled));

    cursor: pointer;

    appearance: none;
    border: none;
    outline: none;
}

input[type="checkbox"].switch:checked {
    background-color: rgba(var(--color-main), var(--opacity-disabled));
}

input[type="checkbox"].switch:disabled {
    opacity: var(--opacity-disabled);

    cursor: initial;
}

input[type="checkbox"].switch::before,
input[type="checkbox"].switch::after {
    content: "";

    display: block;
    position: absolute;

    border-radius: 50%;
}

input[type="checkbox"].switch::before {
    width: 40px;
    height: 40px;

    top: -13px;
    left: -13px;

    background-color: transparent;

    --color-overlay: var(--color-on-surface);
}

input[type="checkbox"].switch::after {
    width: 20px;
    height: 20px;

    top: -3px;
    left: -3px;

    background-color: rgb(var(--color-surface));

    --elevation: var(--elevation-2);
}

input[type="checkbox"].switch:checked::before {
    left: 5px;

    --color-overlay: var(--color-main);
}

input[type="checkbox"].switch:checked::after {
    left: 15px;

    background-color: rgb(var(--color-main));
}

input[type="checkbox"].switch:hover::before {
    --opacity-overlay: var(--opacity-hover);
}

input[type="checkbox"].switch:focus::before {
    --opacity-overlay: var(--opacity-focus);
}

input[type="checkbox"].switch:active::before {
    --opacity-overlay: var(--opacity-active);
}

input[type="checkbox"].switch:disabled::before {
    box-shadow: none;
}
