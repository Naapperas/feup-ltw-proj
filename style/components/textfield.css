:is(.textfield, .select) {
    display: grid;
    grid-template:
        "input input" 48px
        "assistive-text character-counter" auto / auto auto;

    position: relative;

    justify-self: stretch;
    height: min-content;
    width: 100%;

    font-size: 1rem;
}

.select::after {
    content: "arrow_drop_down";

    display: block;
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);

    width: 24px;
    height: 24px;
    font-size: 24px;
    font-family: "Material Icons";
    line-height: 1;
    letter-spacing: initial;

    pointer-events: none;

    transition-property: transform;
    transition-duration: 200ms;
    transition-timing-function: ease-in-out;
}

/* 
I'd like this style to apply only to open selects,
but that is impossible outside chromium
*/
.select:focus-within:after {
    transform: translateY(-50%) rotate(180deg);
}

:is(.textfield, .select) label {
    position: absolute;
    left: 16px;
    top: 24px;
    transform: translateY(-50%);
    pointer-events: none;

    transition-property: top, transform, font-size, color;
    transition-duration: 200ms;
    transition-timing-function: ease-in-out;
}

:is(.textfield input, .select select):is(:not(:placeholder-shown), :focus)
    ~ label {
    top: 22px;
    font-size: 0.75rem;
    transform: translateY(-100%);
}

:is(.textfield input, .select select):focus ~ label {
    color: rgb(var(--color-main));
}

:is(.textfield input, .select select) {
    appearance: none;
    grid-area: input;

    height: 48px;
    padding: 20px 16px 4px 16px;
    width: 100%;

    border-color: rgb(var(--color-on-surface));
    border-style: none;
    border-bottom-style: solid;
    border-width: 1px;
    border-radius: 8px 8px 0 0;

    outline: none;

    background-color: rgb(var(--color-surface));

    --opacity-overlay: 8%;
    --color-overlay: var(--color-on-surface);

    caret-color: rgb(var(--color-main));
}

.textfield input::placeholder {
    opacity: 0;

    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: ease-in-out;
}

/* Only works on chromium, but at least it's something */
.textfield input::-webkit-inner-spin-button {
    height: 24px;
    margin-top: -8px;
}

:is(.textfield input, .select select):focus {
    border-color: rgb(var(--color-main));
    border-width: 2px;
}

.textfield input:focus::placeholder {
    opacity: initial;
}

:is(.textfield input, .select select).error {
    border-width: 2px;
    border-color: rgb(var(--color-error));
    caret-color: rgb(var(--color-error));
}

:is(.textfield input, .select select).error ~ label {
    color: rgb(var(--color-error));
}

:is(.textfield input, .select select):hover {
    --opacity-overlay: calc(8% + var(--opacity-hover));
}

:is(.textfield input, .select select):disabled {
    opacity: var(--opacity-disabled);
    --opacity-overlay: 8%;
    background-color: rgba(var(--color-on-surface), 8%);
}

:is(.textfield input, .select select):disabled ~ label {
    opacity: var(--opacity-disabled);
}

.textfield .toggle-visible {
    position: absolute;
    top: 4px;
    right: 12px;

    padding: 0;
    margin-right: -8px;

    --color-button: var(--color-on-surface);
}

.textfield .toggle-visible::before {
    content: "visibility_off";
}

.textfield input[type="password"] ~ .toggle-visible::before {
    content: "visibility";
}

.textfield :is(.character-counter, .error-text, .helper-text) {
    display: inline-block;
    padding-top: 4px;
    height: calc(1em + 8px);

    overflow: hidden;

    font-size: 0.75rem;
    letter-spacing: 0.0333333333em;
    color: rgba(var(--color-on-surface), var(--opacity-medium-emphasis));
}

.textfield :is(.error-text, .helper-text) {
    grid-area: assistive-text;
    justify-self: start;
    text-align: start;
    margin-left: 16px;
}

.textfield .character-counter {
    grid-area: character-counter;
    justify-self: end;
    margin-right: 16px;
}

.textfield .error-text {
    color: rgb(var(--color-error));
}

.textfield input:not(.error) ~ .error-text {
    opacity: 0%;
    height: 0px;
}

.textfield input.error ~ .error-text ~ .helper-text {
    opacity: 0%;
    height: 0px;
}
